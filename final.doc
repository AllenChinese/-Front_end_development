2017年终工作总结报告

姓名：周嘉炜        部门：商城部门        职位：web前端工程师

到2017年12月5号，是我来到帕摩数据科技的整一年，2016年那个时候我是以实习生的身份加入团队，现在部分同事也是和我同一时间进来的。
感谢公司对于实习生和正式员工项目上的无差别对待，使得我进入公司的开始，就有幸加入到公安天津项目的前端开发中。在这一整段时间里，我几乎接触、开发了公司两个业务部门的所有产品。使得我在这个一年成长的很快，技术上、经历经验上都有了不错的提高。
同时，在一年的开发过程中，经历了不同的项目后，也认识到自己不足的方面，也更加激发自己在编程开发上能够深入的研究。由于开始的时候，前端都是我独立开发，所以对于整体代码的把控也有一定理解。但是，也希望自己能够在非技术，团队协作、管理上有更大的进步。

一、2017项目开发总结一览

1、《购伴》微信公众号前端开发
从10月份开始，我分配到了最新的义乌商城项目中，这一条依托室内导航为出发点的业务。周期4个月。主要包括微信公众号、Android、iOS三个平台的开发。由于第三方应用以嵌 webview 的方式，所以前端我只需要开发一套代码。有过相关的实践经验，我便开始独立负责起前端的技术选型、开发环境搭建以及初始版本的界面编码。当时我个人的提议是使用阿里开源的 weex 来开发 native 级的应用。架构师认为周期太短、相关经验不足、不宜冒险，现在来看，是正确的决策。
但是这不影响我在空闲时间，学习和实践阿里的 weex 移动端 app 开发。
微信公众号的开发是第一位，在之前我有用 vue 成功开发完了燃气管理系统，我认为这种组件化的单页面工程化开发，代码分成清晰，易于维护、便于重构和协作开发，同样适用于商城的项目。所以这次的开发仍然沿用了vue-cli脚手架。

1、技术栈：vue-cli、vue-router、vuex、mint-ui、wx sdk、fetch.js(封装的async await异步请求)
2、编辑器：vscode
3、版本控制器：svn
4、前后端分离的架构设计

在这个项目中，我负责前端部分的整体编程开发，和各模块的代码控制以及前端部分的鲁棒性。在11月底，《购伴》商城微信公众号一期正式上线了。也开始逐步进入敏捷性的迭代过程。12月份，在一期的基础上，加入了商品的模块，在逐渐丰富功能性的同时，前端也在想如何在易用性和交互性上有一定的改善。
在两个多月的上线推广中，项目也积累了一定的用户量和 app 识别度，相信在不断用户反馈和产品定位深度挖掘下，《购伴》能够拥有不错的产品效益。 
谈谈这次微信公共号的开发感受：糟糕的开发体验，在微信浏览器中的开发完全不同与普通的 webapp 后者 pc 端的开发。各种缓存、兼容性、在使用微信自带的 sdk 时也是踩了很多坑。也会因为在开发时，使用的微信开发者工具版本较低，而出现莫名的 bug。
这一次的开发过程中，逐渐的熟悉了一些微信的 sdk 使用和提高了调试方面的经验。这个项目的代码整体的质量也是我自己的开发过最用心的。不管是在代码注释上、封装上、复用、耦合性上都做了一些优化。
对于代码质量的把控，非常重要，所以都应该要有主管去 review 代码，代码不光是给电脑看的、给自己看的，也是要给别人看的。清晰的注释可以省去多余的沟通，也可以大大降低重构的难度。这也是我需要去提高的一部分，也是在努力提升自己的一点。

2、《义乌燃气管理系统》
领完毕业证回来后，当月在公司就转正了，说实话除了工资上的变化外，也没有特别的感受。就开始投入到开发中去了。
部门新的业务需要做一个燃气的后台管理系统，并且配有 app 应用。当时就已经又开始学习 vue.js 了，相关的基础语法较熟悉，写过一些 demo。所以当过过原型后，我就提议了用 vue 以单页面应用的方式来开发这个系统。现在 vue 同样也是我前端开发的主力语言，当然优选但不限于 vue，也看具体的业务需求。
燃气管理后台的开发周期非常短，也是我第一次独立开发前端。这个项目没有复杂的界面和交互，难点主要还是在业务逻辑上，一些公司和角色的权限和分配，相关表单的验证。再加上又是首次尝试新的开发语言，所以压力不小，也遇到了打包部署上的问题等等。

1、技术栈：vue-cli-simple、vue-router、vuex、Element-ui、Axios
2、编辑器：sublime
3、版本控制器： svn
4、前后端分离的架构设计

这一次的开发，前端是我自己搭建环境，从一到二，到项目正式上线，整个开发过程下来。编写代码能力，整体项目把控、处理、解决问题的能力，都有了一定的提高。也发现自己对于产品功能、需求的理解还是比较迟钝的，其实到最后项目上线，还是没有其中的一些业务逻辑，所以上线后出现了一些不满足场景的问题。而且代码的复用性上，还没有一些思考，导致代码非常臃肿，代码维护真的有点头疼，有很大的优化空间。

3、《天津反电诈项目》、《资金流项目》
我的第一位领路人就是面试我的前端负责人（我“姐”哈哈），所以比较照顾我，上来就能有发挥的机会，第一个正式的项目是为公司的公安平台写一个内部聊天系统，UI原型很简单，功能很简单，终极阉割版的 PC 版微信。

1、技术栈：后台jsp模板开发，JavaScript，jQuery，layerUI，Less
2、编辑器： eclipse
3、版本控制器：svn

就这样我和另外一个前端和一个后端开发，开始了比较正式模块开发。由于在之前的一段时间在师傅的指导下，做过一些demo，主要是练习自己的代码整洁和一些封装的思想，所以自己在开发的时候会比较在意，写的代码起码不能很乱。就这样，陆陆续续写了一周的结构样式和功能函数。就开始调接口，之前自己也我用过php写过接口，Ajax来异步请求，所以这一块也不陌生。后台模板语法，不是前后端分离的模式。
因为是第一个放在正式项目中的模块，所以写的时候也是很认真，代码的也是有一定的可读性，但是对于易重构性，耦合性这些概念都很模糊。这次的编写代码，使自己在用jQuery开发技巧上有一定的提升，api的使用也变得熟练。也深深感到，项目实践对于技术的提升和快速。
其中，也发现自己在逻辑和问题解决上还是比较欠缺的，不管是去找问题或者找解决方法上，相比其他的小伙伴都有些不如。这也是我暗暗下定要整理自己的一套方法库，所以开始把自己遇到的问题和解决方法记录在博客上，也尝试着看看jQuery的源码。


二、前端、项目组协作开发经验总结、反思和建议

首先，从最近两个项目的开发体验来说，第一点，前端技术风险评估和控制做的不够好，主要原因有两点，自身经验不够，没有相关的开发实践，导致很多的问题需要到项目开发中如解决，影响项目的推进；再来是在项目开发的之前，并没有对于技术使用和对项目的契合度，有一个细致的讨论和评估，当然这也一定程度受到第一点的影响，作为前端，我需要去更广的接触不同的技术，并且了解不同技术的优缺点和难点。这样对不同业务需求，有更适合的技术栈使用。同样的，在广度的基础上，对于主流技术语言，自己擅长的方面也得继续的深挖，提升自己在相关技术上的解决问题能力。
第二点，前端组员之间的协作开发，《义乌燃气管理系统》项目前端是我独立开发的，独立开发好处就是代码质量和开发进度，自己能够有更好的控制性。对于代码的管理也更加的自如。但是，大的项目，前端也是需要更多的组员加入，所以协作开发是必须的。这次商城的项目，前端有两个，我是先独立搭建了开发环境的架构，也将项目各个模块进行了细分，前端的协作开发就以模块的粒度大小分。按成员的条件，去分配不同模块和不同工作量。并且前端也需要进行代码分布式管理，我们使用的是svn进行代码版本控制。
在开发的时候，我们会有这样的问题，比如项目上线在即，其中一个组员的代码都开发完了，但是由于另外的成员因为模块的难易度，导致延期，那么整个项目都会拖延。这个情况，我是这样想的，第一，我们需要在项目的进度上更严格的把控，虽然不用制定每周的任务量，但是对于开发的进度需要时刻了解。第二，开发不完更大的原因，和代码的质量有关，好的代码更加的清晰、易重构。所以，两周的代码 review 我觉得也有必要，并且需要组员去学习良好的编码习惯和技巧。不同成员之间也可以相互的借鉴和分享自己的代码，相互提高。
第三点，前端和其他职位间的沟通。前端是一个承上启下的职位，我们起到连接设计交互和后台的作用。所以前端开发人员，也是需要有一个良好的沟通能力。在项目开发的过程中，有任何的问题和疑问，需要我们去及时的反馈和沟通。
及时了解业务的变动和理解真实的需求。同时，也敢于去砍需求，去加速完成最简单、最核心的功能。
和后端的调接口，最直观的感受是，接口的参数和response 信息模糊、不匹配。这个模糊来自，前后端没有沟通下，后端独自开发接口，使得前端需要传什么参数，能得到什么返回数据，都不一定是前端需要的或者能够实现的。所以有一份接口文档，并且是在项目开发前，通过前后端讨论出来的，是很有必要的。这也是开发的一个凭证。好在，商城组是前后端分离的开发模式，接口维护都是在rap上，所以前端需要什么接口，有什么接口，直接可以在rap上找到。但是问题是，rap上的接口现在是后端开发人员，单独在维护，这使得前端对于接口使用很被动。导致所维护的接口，并不一定是最优，最合适的。
这也需要我们前端去更多的了解业务逻辑，这样开发的接口一开始就会有不错的完整度。不同像现在一样，一个接口需要在调试中修改多次。前端修改容易，但是后端修改就得重新启动，这个启动的速度，体验过的都知道，相当慢。

前端现有的技术栈：

1、单页面形式的：
Vue.js、vue-router、vuex、Axios、ElementUI(PC端)、mintUI(移动端)

2、多页面形式的：
jQuery（vue.js）、ajax、layerUI、bootstrap、webpack

前端可扩展技术：

移动端：appcan（混合开发模式）、weex（native开发）

vue服务端渲染模式：nuxt.js（利于SEO，对浏览器爬虫友好）

三、新一年工作上的展望和规划

  新一年在工作上，在基础的业务开发中，更多的去优化前端开发的流程和着力于提升前端代码的质量。再一点是，协调好前端组员之间的协作开发，在如何提升前端开发进度上，能有新的思考和实践。
  在业务开发的同时，不断扩展自己的技术栈。更多的去学习和实践移动端app的开发语言。目前有两个点，一个是阿里开源的weex 原生app 开发语言；第二个是appcan混合开发形式。在后端语言中，我选择去全面的学python 脚本语言。
  在整个开发过程中，也认识到自身在解决问题的能力上，还有很长的路要走，解决问题能力体现了一个开发者经验和明锐洞察力的体现。这不仅需要更多项目的实践积累和自身素养的提高，也需要从思维上更加的发散。
  沟通能力在这一年有了进步，敢于去交流和协调。但是在沟通的技巧上，还很不足，甚至有时候有点幼稚。上面也说了，前端是承接设计、交互和后台的中间人。所以沟通能力很重要。好的沟通带来的不仅是提高项目的进度，还有自身在团队中的影响力和形象。我要做到敢于交流的同时，控制自己的语言，通俗的就这句话怎么说更合适，这需要我提高的沟通技巧。好的交流对于团队的凝聚力和创造性有着催化剂的效果。
  对于现有自身掌握的技术，我会更加系统的去研究原理，能够在理解和使用上更上一层楼。这需要我去读源码，了解作者的思路，这对于我在某一个领域上有自己见解的唯一途径。这也是我新一年对自己的要求，在前端开发框架vue上，有一定的个人理解，做到能够去指导新人学习vue这样一个程度。这也是我在CSDN上创建《前端框架vue初体验》专栏的初衷，当然该专栏已经搜集了我编写的16篇文章，也有了不错的pv量。年底的时候，也被评为了准博客专家的称号。
  最后，希望自己在新一年的工作中更加的踏实，对公司有更具体的价值输出。也深知这一年对自己的职业发展会是重要的一年，期盼自己能在技术上、职业上有更清晰的规划和更大的突破。
  

